<%= form_with(model: [:admin, model], local: true, class: 'form') do |form| %>
  <% if model.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(model.errors.count, "error") %> prohibited this model from being saved:</h2>

      <ul>
      <% model.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <% attributes = new_model ? new_fields : edit_fields %>
  <% attributes.each do |attribute| %>
    <div class="form-group">
      <div class="row">
        <div class="col-sm-2">
          <%= form.label attribute %>
        </div>
        <div class="col-sm-10">
          <%- text = help_text attribute %>
          <%- case model.class.columns_hash[attribute].type %>
          <%- when :boolean  %>
            <%= form.check_box attribute, class: 'form-check' %>
          <%- when :datetime%>
            <%= form.date_field attribute, class: 'form-control' %>
          <%- when :json %>
            <%= form.text_area attribute, class: 'form-control' %>
          <%- else %>
            <%= form.text_field attribute, class: 'form-control' %>
          <%- end %>
          <%- if text %>
            <small class="form-text text-muted"><%= text %></small>
          <%- end %>
        </div>
      </div>
    </div>
  <%- end %>
  <%- form_relations.each do |relation_name, info| %>

    <div class="form-group">
      <div class="row">
        <div class="col-sm-2">
          <%= form.label relation_name %>
        </div>
        <div class="col-sm-10">
          <%= form.send(info[:type], relation_name, info[:finder].call, info[:options] || {}, (info[:html_options] || {}).merge({class: 'form-control'}) ) %>
        </div>
      </div>
    </div>
  <%- end %>

  <%= render partial: 'sub_form', locals: { model: model, form: form, new_model: new_model } %>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>
